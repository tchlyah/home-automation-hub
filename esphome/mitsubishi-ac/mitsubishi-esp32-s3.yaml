## Atom S3 lite
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf

## UART on CN105
uart:
  id: HP_UART
  baud_rate: 2400
  tx_pin: GPIO1
  rx_pin: GPIO2

# --- AtomS3 Lite onboard RGB LED (single WS2812 on GPIO35) ---
light:
  - platform: esp32_rmt_led_strip
    id: status_led
    name: "Status LED"
    internal: true
    chipset: ws2812
    pin: GPIO35
    num_leds: 1
    rgb_order: GRB
    default_transition_length: 0s
    restore_mode: ALWAYS_OFF

esphome:
  on_boot:
    priority: -10          # runs early, before Wi-Fi connects
    then:
      # --- Wi-Fi not yet connected  âžœ  RED
      - light.turn_on:
          id: status_led
          red: 100%
          green: 0%
          blue: 0%

wifi:
  on_connect:
    then:
      - lambda: 'id(wifi_ok) = true;'
  on_disconnect:
    then:
      - lambda: 'id(wifi_ok) = false;'

interval:
  - interval: 5s          # lightweight scheduler :contentReference[oaicite:2]{index=2}
    then:
      - lambda: |-
          const bool wifi  = id(wifi_ok);
          // CN105 low-level link status
          const bool ac_ok = (bool) id(ac).isHeatpumpConnectionActive();
          // --- choose LED colour -----------------------------------------
          float r=0, g=0, b=0;
          if (wifi && ac_ok)          { g = 1;           } // GREEN
          else if (wifi && !ac_ok)    { b = 1;           } // BLUE
          else if (!wifi && ac_ok)    { r = 1; g = 1;    } // YELLOW
          else                        { r = 1;           } // RED
          // --- push to LED -----------------------------------------------
          auto call = id(status_led).turn_on();
          call.set_rgb(r, g, b);
          call.set_brightness(0.6);
          call.perform();

